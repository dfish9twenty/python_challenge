{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7d3e22c4",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import csv\n",
    "\n",
    "os.path.join(\"Resources\",\"election_data.csv\")\n",
    "election_data = os.path.join(\"Resources\",\"election_data.csv\")\n",
    "\n",
    "with open(election_data, newline='') as csvfile:\n",
    "    csvreader = csv.reader(csvfile, delimiter=',')\n",
    "    csv_header = next(csvreader)\n",
    "\n",
    "\n",
    "    totalVotes = 0\n",
    "    votesPerCandidate = {}  \n",
    "    \n",
    "    \n",
    "    for row in csvreader:\n",
    "      \n",
    "        totalVotes += 1\n",
    "        \n",
    "        if row[2] not in votesPerCandidate:\n",
    "            votesPerCandidate[row[2]] = 1\n",
    "        else:\n",
    "            votesPerCandidate[row[2]] += 1   \n",
    "        \n",
    "        \n",
    "print('\\n')\n",
    "print(\"Election Results          \")\n",
    "print(\"-----------------------------------------------------------\")\n",
    "print(\"Total Votes: \" + str(totalVotes))\n",
    "print(\"-----------------------------------------------------------\")\n",
    "\n",
    "for candidate, votes in votesPerCandidate.items():\n",
    "    print(candidate + \": \" + \"{:.3%}\".format(votes/totalVotes) + \"   (\" +  str(votes) + \")\")\n",
    "    \n",
    "print(\"-----------------------------------------------------------\") \n",
    "\n",
    "winner = max(votesPerCandidate, key=votesPerCandidate.get)\n",
    "\n",
    "print(f\"Winner: {winner}\")\n",
    "print('\\n')\n",
    "\n",
    "\n",
    "\n",
    "f = open(\"electionResults.txt\", \"w\")\n",
    "f.write(\"Election Results\")\n",
    "f.write('\\n')\n",
    "f.write(\"---------------------------------------------------------\")\n",
    "f.write('\\n')\n",
    "f.write(\"Total Votes: \" + str(totalVotes))\n",
    "f.write('\\n')\n",
    "f.write(\"---------------------------------------------------------\")\n",
    "f.write('\\n')\n",
    "\n",
    "for candidate, votes in votesPerCandidate.items():\n",
    "    f.write(candidate + \": \" + \"{:.3%}\".format(votes/totalVotes) + \"   (\" +  str(votes) + \")\")\n",
    "    f.write('\\n')\n",
    "  \n",
    "f.write(\"---------------------------------------------------------\") \n",
    "f.write('\\n')\n",
    "f.write(f\"Winner: {winner}\")\n",
    "f.write('\\n')\n",
    "f.write('---------------------------------------------------------')\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cebe7ecf",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "PythonData",
   "language": "python",
   "name": "pythondata"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
